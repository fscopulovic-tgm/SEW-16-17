package client;

import abonennt.Abonennt;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * @author Filip Scopulovic
 * @date 14.03.2017
 * @use GUI-class for the client
 */
public class ClientGUI extends JFrame {
    private JButton deabonnierenButton;
    private JButton deabonnierenButton1;
    private JButton deabonnierenButton2;
    private JButton abonnierenButton;
    private JButton abonnierenButton1;
    private JButton abonnierenButton2;
    private JButton artikelAnzeigenButton;
    private JButton artikelAnzeigenButton1;
    private JButton artikelAnzeigenButton2;
    private JPanel clientFrame;

    private Abonennt abo;

    /**
     * Constructor for the ClientGUI
     * It will call the method $$$setupUI$$$, which creates the GUI
     *
     * @param abo: Abonennt
     */
    public ClientGUI(Abonennt abo) {
        super("ClientGUI");

        setSize(150, 150);
        setContentPane(clientFrame);
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);

        this.abo = abo;

        ActionListener listener = new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                if (e.getSource() == abonnierenButton) {
                    ClientGUI.this.abo.subscribe(ClientGUI.this.abo.getZeitungen().get(0));
                    abonnierenButton.setEnabled(false);
                    deabonnierenButton.setEnabled(true);
                    artikelAnzeigenButton.setEnabled(true);
                } else if (e.getSource() == abonnierenButton2) {
                    ClientGUI.this.abo.subscribe(ClientGUI.this.abo.getZeitungen().get(1));
                    abonnierenButton2.setEnabled(false);
                    deabonnierenButton2.setEnabled(true);
                    artikelAnzeigenButton2.setEnabled(true);
                } else if (e.getSource() == abonnierenButton1) {
                    ClientGUI.this.abo.subscribe(ClientGUI.this.abo.getZeitungen().get(2));
                    abonnierenButton1.setEnabled(false);
                    deabonnierenButton1.setEnabled(true);
                    artikelAnzeigenButton1.setEnabled(true);
                } else if (e.getSource() == deabonnierenButton) {
                    ClientGUI.this.abo.unsubscribe(ClientGUI.this.abo.getZeitungen().get(0));
                    abonnierenButton.setEnabled(true);
                    deabonnierenButton.setEnabled(false);
                    artikelAnzeigenButton.setEnabled(false);
                } else if (e.getSource() == deabonnierenButton1) {
                    ClientGUI.this.abo.unsubscribe(ClientGUI.this.abo.getZeitungen().get(1));
                    abonnierenButton1.setEnabled(true);
                    deabonnierenButton1.setEnabled(false);
                    artikelAnzeigenButton1.setEnabled(false);
                } else if (e.getSource() == deabonnierenButton2) {
                    ClientGUI.this.abo.unsubscribe(ClientGUI.this.abo.getZeitungen().get(2));
                    abonnierenButton2.setEnabled(true);
                    deabonnierenButton2.setEnabled(false);
                    artikelAnzeigenButton2.setEnabled(false);
                } else if (e.getSource() == artikelAnzeigenButton) {
                    ClientGUI.this.abo.update(ClientGUI.this.abo.getZeitungen().get(0), null);
                } else if (e.getSource() == artikelAnzeigenButton1) {
                    ClientGUI.this.abo.update(ClientGUI.this.abo.getZeitungen().get(1), null);
                } else if (e.getSource() == artikelAnzeigenButton2) {
                    ClientGUI.this.abo.update(ClientGUI.this.abo.getZeitungen().get(2), null);
                }
            }
        };
        deabonnierenButton.addActionListener(listener);
        deabonnierenButton1.addActionListener(listener);
        deabonnierenButton2.addActionListener(listener);
        abonnierenButton.addActionListener(listener);
        abonnierenButton1.addActionListener(listener);
        abonnierenButton2.addActionListener(listener);
        artikelAnzeigenButton.addActionListener(listener);
        artikelAnzeigenButton1.addActionListener(listener);
        artikelAnzeigenButton2.addActionListener(listener);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        clientFrame = new JPanel();
        clientFrame.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 4, new Insets(0, 0, 0, 0), -1, -1));
        clientFrame.setBorder(BorderFactory.createTitledBorder(null, "Abonennt", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(clientFrame.getFont().getName(), clientFrame.getFont().getStyle(), clientFrame.getFont().getSize())));
        deabonnierenButton = new JButton();
        deabonnierenButton.setDefaultCapable(true);
        deabonnierenButton.setEnabled(false);
        deabonnierenButton.setSelected(false);
        deabonnierenButton.setText("Deabonnieren");
        deabonnierenButton.setVisible(true);
        clientFrame.add(deabonnierenButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deabonnierenButton1 = new JButton();
        deabonnierenButton1.setEnabled(false);
        deabonnierenButton1.setText("Deabonnieren");
        clientFrame.add(deabonnierenButton1, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deabonnierenButton2 = new JButton();
        deabonnierenButton2.setEnabled(false);
        deabonnierenButton2.setText("Deabonnieren");
        clientFrame.add(deabonnierenButton2, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        abonnierenButton = new JButton();
        abonnierenButton.setText("Abonnieren");
        clientFrame.add(abonnierenButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        abonnierenButton1 = new JButton();
        abonnierenButton1.setText("Abonnieren");
        clientFrame.add(abonnierenButton1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        abonnierenButton2 = new JButton();
        abonnierenButton2.setText("Abonnieren");
        clientFrame.add(abonnierenButton2, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Tageszeitung");
        clientFrame.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Sportzeitung");
        clientFrame.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Wissenschaftszeitung");
        clientFrame.add(label3, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        artikelAnzeigenButton = new JButton();
        artikelAnzeigenButton.setEnabled(false);
        artikelAnzeigenButton.setText("Artikel anzeigen");
        clientFrame.add(artikelAnzeigenButton, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        artikelAnzeigenButton1 = new JButton();
        artikelAnzeigenButton1.setEnabled(false);
        artikelAnzeigenButton1.setText("Artikel anzeigen");
        clientFrame.add(artikelAnzeigenButton1, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        artikelAnzeigenButton2 = new JButton();
        artikelAnzeigenButton2.setEnabled(false);
        artikelAnzeigenButton2.setText("Artikel anzeigen");
        clientFrame.add(artikelAnzeigenButton2, new com.intellij.uiDesigner.core.GridConstraints(2, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return clientFrame;
    }
}
